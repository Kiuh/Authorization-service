{
  "db": "PostgreSQL",
  "04e0f6866212309b4fbc5d6a40fbde83e9a3ba0207ee45989d78b8c9c21bf5e2": {
    "describe": {
      "columns": [
        {
          "name": "local_id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "parent_id",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "intellect_id",
          "ordinal": 2,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\n                SELECT \n                    local_id, \n                    parent_id, \n                    intellect.id AS intellect_id\n                FROM cells \n                INNER JOIN intellect\n                ON cells.local_id = intellect.cell_id\n                WHERE generation_id = $1 \n                AND EXISTS\n                (\n                    SELECT * FROM diffs WHERE\n                    cell_id = cells.id AND\n                    tick_id <= $2 AND\n                    type = 'create_cell'\n                )\n                AND NOT EXISTS \n                (\n                    SELECT * FROM diffs WHERE \n                    cell_id = cells.id AND \n                    tick_id <= $2 AND \n                    type = 'remove_cell'\n                )\n            "
  },
  "24efb27c133d26877d859ab4c962b8bb661f4c683c1fec601a2b784e6babf025": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int8",
          "Int4"
        ]
      }
    },
    "query": " \n                UPDATE \n                    generations\n                SET \n                    last_send_num = GREATEST($1, last_send_num), \n                    last_cell_num = GREATEST($2, last_cell_num)\n                WHERE \n                    id = $3\n            "
  },
  "2637833c7a75610f248cff928e2b7da606d00a0f22dd8ff856cf68de6b3c9520": {
    "describe": {
      "columns": [
        {
          "name": "map_prefab",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "life_type_prefab",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "feed_type_prefab",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "setup_type_prefab",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "map_json",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "life_type_json",
          "ordinal": 5,
          "type_info": "Varchar"
        },
        {
          "name": "feed_type_json",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "setup_type_json",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "tick_period",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "description",
          "ordinal": 9,
          "type_info": "Varchar"
        },
        {
          "name": "name",
          "ordinal": 10,
          "type_info": "Varchar"
        },
        {
          "name": "last_send_num",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "last_cell_num",
          "ordinal": 12,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n                SELECT \n                    map_prefab, life_type_prefab, feed_type_prefab, setup_type_prefab,\n                    map_json, life_type_json, feed_type_json, setup_type_json,\n                    tick_period, description, name, last_send_num, last_cell_num\n                FROM\n                generations\n                WHERE owner_id = $1\n            "
  },
  "28c45b04b8a3efa7eb4ce9c41437632c19b78b6d5f24036e18ff1dc564f70695": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Varchar",
          "Int4",
          "Varchar",
          "Varchar",
          "Varchar",
          "Varchar",
          "Varchar",
          "Varchar",
          "Varchar",
          "Varchar",
          "Numeric",
          "Varchar"
        ]
      }
    },
    "query": "\n                INSERT INTO generations\n                (\n                    name, owner_id, \n                    map_prefab, life_type_prefab, feed_type_prefab, setup_type_prefab, \n                    map_json, life_type_json, feed_type_json, setup_type_json,\n                    tick_period, description\n                ) \n                VALUES \n                ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)\n            "
  },
  "3169cc8e8beb589aeb5505f6c32d3c50d0481dab17612dd57a8442a7f9a25ee5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int4"
        ]
      }
    },
    "query": "DELETE FROM generations WHERE name = $1 AND owner_id = $2"
  },
  "333f3cd75b286b62bfbd70044a9f14f32ba2e8c9bc0834643ce1b86aed7a4ec2": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int4"
        ]
      }
    },
    "query": "\n                SELECT id \n                FROM generations \n                WHERE generations.name = $1 AND owner_id = $2\n            "
  },
  "70d959d98ced3162e1a70d5930c58dc395bb1d9216d0c981b4efdb4fec4b3e1e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create_cell",
                  "change_module_value",
                  "remove_cell"
                ]
              },
              "name": "diff_type"
            }
          },
          "Int4",
          "Int4Array",
          "VarcharArray",
          "NumericArray"
        ]
      }
    },
    "query": "\n                INSERT INTO \n                diffs(cell_id, tick_id, type, changed_module, new_value) \n                SELECT id, $1, $2, evnts.module, evnts.new_value FROM \n                (SELECT * FROM UNNEST($4::INTEGER[], $5::VARCHAR[], $6::DECIMAL[]) AS DATA(local_id, module, new_value)) evnts\n                INNER JOIN cells \n                ON evnts.local_id = cells.local_id \n                WHERE cells.generation_id = $3\n            "
  },
  "7f7eb01e97d2aa17d1b45f7ec30d691ed7f9d8d2990ede919dc39761faab20d9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create_cell",
                  "change_module_value",
                  "remove_cell"
                ]
              },
              "name": "diff_type"
            }
          },
          "Int4Array",
          "Int4"
        ]
      }
    },
    "query": "\n                INSERT INTO \n                diffs(cell_id, tick_id, type) \n                SELECT id, $1, $2 FROM \n                (SELECT * FROM UNNEST($3::INTEGER[]) AS DATA(local_id)) local_ids\n                INNER JOIN cells \n                ON local_ids.local_id = cells.local_id \n                WHERE cells.generation_id = $4\n            "
  },
  "83c64061d778ac17714d83a9c5bbefb55facc8aeb0f594a259bd28d730637de3": {
    "describe": {
      "columns": [
        {
          "name": "module_name",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "initial_value",
          "ordinal": 1,
          "type_info": "Numeric"
        },
        {
          "name": "changed_value",
          "ordinal": 2,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\n                    SELECT \n                        modules.name AS module_name,\n                        modules.value AS initial_value,\n                        (\n                            SELECT \n                                new_value \n                            FROM\n                                diffs \n                            WHERE \n                                tick_id <= $2 AND \n                                cell_id = $1 AND \n                                changed_module = modules.name\n                            ORDER BY tick_id DESC\n                            LIMIT 1\n                        ) AS changed_value\n                    FROM modules\n                    WHERE cell_id = $1\n                "
  },
  "88b72b19daeef2c5dba07d41000d307ff6dd8849455688ccbbaec1ef2e6acdad": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "NumericArray"
        ]
      }
    },
    "query": "\n                INSERT INTO \n                gens(intellect_id, from_id, to_id, weight) \n                SELECT * FROM \n                UNNEST($1::INTEGER[], $2::INTEGER[], $3::INTEGER[], $4::DECIMAL[])\n            "
  },
  "90beb85c249ca99b293eb4eb0c3df2c2d948a8bd00be2d7451c9d5359daad146": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "VarcharArray"
        ]
      }
    },
    "query": "INSERT INTO modules(cell_id, name) SELECT * FROM UNNEST($1::INTEGER[], $2::VARCHAR[])"
  },
  "930ed8606adf9d0b33982a9a308f08cfc49d3ca276c24573860022f1a6ceab0b": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int4Array",
          "Int4Array",
          "Int4Array"
        ]
      }
    },
    "query": "\n                INSERT INTO \n                cells(parent_id, local_id, generation_id) \n                SELECT * FROM UNNEST($1::INTEGER[], $2::INTEGER[], $3::INTEGER[]) \n                RETURNING id\n            "
  },
  "99015c2802fc299ea556c962dae034a43d5d97a501afc54fa88d3c6068d79580": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Varchar",
          "Varchar",
          "Text",
          "Int4"
        ]
      }
    },
    "query": "\n                UPDATE generations \n                SET name = $1, description = $2\n                WHERE name = $3 AND owner_id = $4\n            "
  },
  "9e1dcc313cd5968126ecf71e304760576dda2f8bad53089119e7e1d60496cd48": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int4Array",
          "Int4Array",
          "Int4Array"
        ]
      }
    },
    "query": "\n                INSERT INTO \n                intellect(cell_id, in_neuron_count, out_neuron_count) \n                SELECT * FROM UNNEST($1::INTEGER[], $2::INTEGER[], $3::INTEGER[]) \n                RETURNING id\n            "
  },
  "da68c61b441a96d8ca605f8588df5580b9ca0442834a27c37ca96374ef2cdfc4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "NumericArray"
        ]
      }
    },
    "query": "INSERT INTO neurons(intellect_id, bias) SELECT * FROM UNNEST($1::INTEGER[], $2::DECIMAL[])"
  },
  "e02ed6454655f83cac9398f1e0cbf0f5eb5ece49567c53af1bd3798a32525977": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "VarcharArray",
          "NumericArray"
        ]
      }
    },
    "query": "INSERT INTO modules(cell_id, name, value) SELECT * FROM UNNEST($1::INTEGER[], $2::VARCHAR[], $3::DECIMAL[])"
  },
  "e2ae6af0b37a293c797b79c4c5fafeb6b81a92138865d8095dfd0beaa0011cb2": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int4"
        ]
      }
    },
    "query": "\n                SELECT id \n                FROM generations \n                WHERE name = $1 AND owner_id = $2\n            "
  },
  "e6f06b5975204911ad370182b8b4d16fcfae1f45a06a334ffa7a699589f19d3d": {
    "describe": {
      "columns": [
        {
          "name": "in_neuron_count",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "out_neuron_count",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "neuron_biases",
          "ordinal": 2,
          "type_info": "NumericArray"
        },
        {
          "name": "gen_from_ids",
          "ordinal": 3,
          "type_info": "Int4Array"
        },
        {
          "name": "gen_to_ids",
          "ordinal": 4,
          "type_info": "Int4Array"
        },
        {
          "name": "gen_weights",
          "ordinal": 5,
          "type_info": "NumericArray"
        }
      ],
      "nullable": [
        false,
        false,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\n                SELECT \n                    in_neuron_count, \n                    out_neuron_count,\n                    (\n                        SELECT ARRAY_AGG(bias::DECIMAL) FROM neurons WHERE intellect_id = $1\n                    ) AS neuron_biases,\n                    (\n                        SELECT ARRAY_AGG(from_id::INTEGER) FROM gens WHERE intellect_id = $1\n                    ) AS gen_from_ids,\n                    (\n                        SELECT ARRAY_AGG(to_id::INTEGER) FROM gens WHERE intellect_id = $1\n                    ) AS gen_to_ids,\n                    (\n                        SELECT ARRAY_AGG(weight::DECIMAL) FROM gens WHERE intellect_id = $1\n                    ) AS gen_weights\n                FROM intellect\n            "
  },
  "fec665ed8c0296cb9898c159179fd138572d235d68c14b28cc1cd40182442b8e": {
    "describe": {
      "columns": [
        {
          "name": "tick_period",
          "ordinal": 0,
          "type_info": "Numeric"
        },
        {
          "name": "last_send_num",
          "ordinal": 1,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int4"
        ]
      }
    },
    "query": " \n                SELECT tick_period, last_send_num \n                FROM generations\n                WHERE generations.name = $1 AND owner_id = $2 \n            "
  }
}