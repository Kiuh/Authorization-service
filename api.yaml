openapi: 3.0.0
info:
  version: 1.0.0
  title: 'Life Creator API'
  description: 'little api'
paths:
  /User:
    put:
      tags:
      - User
      description: Зарегестрировать одного пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT_User_Body'
      responses:
        "200":
          description: Sucsess
        "500":
          description: Error
    post:
      tags:
      - User
      description: Запрос на вход в аккаунт
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST_User_Body'
      responses:
        "200":
          description: Sucsess
        "500":
          description: Error
    patch:
      tags:
      - User
      description: Запрос на напоминание логина и пароля
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCH_User_Body'
      responses:
        "200":
          description: Sucsess
        "500":
          description: Error
  
  /Generations:
    get:
      tags:
      - Generations
      description: Получить информацию о генерациях пренадлежащих одному пользователю
      parameters:
      - name: login
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: user1
      responses:
        "200":
          description: Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GET_Generations_Response_200'
        "500":
          description: Error
  
  /Generation/{name}/Time:
    get:
      tags:
      - Generation logic
      description: Получить общее время генерации по имени
      parameters:
      - name: login
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: User
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Generation1
      responses:
        "200":
          description: Float
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GET_GenerationTime_Response_200'
        "500":
          description: Error
  /Generation/{name}/LifeEnds:
    get:
      tags:
      - Generation logic
      description: Получить общее время генерации по имени
      parameters:
      - name: login
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: User
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Generation1
      responses:
        "200":
          description: Int
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GET_GenerationLifeEnds_Response_200'
        "500":
          description: Error
 
  /Generation:
    put:
      tags:
      - Generation
      description: Создать генерацию
      parameters:
      - name: login
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT_Generation_Body'
        required: true
      responses:
        "200":
          description: Sucsess
        "500":
          description: Error 
  /Generation/{name}:
    delete:
      tags:
      - Generation
      description: Удалить генерацию по имени
      parameters:
      - name: login
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: User
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Generation1
      responses:
        "200":
          description: Sucsess
        "500":
          description: Error
    patch:
      tags:
      - Generation
      description: Задать новое имя и описание генерации
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Generation1
      - name: login
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCH_Generation_Body'
        required: true
      responses:
        "200":
          description: Sucsess
        "500":
          description: Error
  
  /Generation/{name}/Cells/{sendID}:
    get:
      tags:
      - Generation cells
      description: Получить все клетки и их состояние на окончание 1 тика
      parameters:
      - name: login
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: User
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Generation1
      - name: sendID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
        example: 0
      responses:
        "200":
          description: Sucsess
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GET_GenerationCellsInTick_Response_200'
        "500":
          description: Error
    patch:
      tags:
      - Generation cells
      description: Информация о произошедшем в генерации за 1 тик
      parameters:
      - name: login
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: User
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Generation1
      - name: sendID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
        example: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCH_GenerationInfoInTick_Body'
        required: true
      responses:
        "200":
          description: Sucsess
        "500":
          description: Error

  /Config:
    get:
      tags:
      - Configurate info
      description: Получить информацию для начала работы приложения
      responses:
        "200":
          description: Sucsess
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GET_Config_Response_200'
        "500":
          description: Error
  
components:
  schemas:
  
    # Схемы для эндпоинтов
    PUT_User_Body:
      type: object
      properties:
        login:
          type: string
          example: User
        email:
          type: string
          example: someone@gmail.com
        password:
          type: string
          example: Password
    POST_User_Body:
      type: object
      properties:
        login:
          type: string
          example: User
        password:
          type: string
          example: Password
    PATCH_User_Body:
      type: object
      properties:
        email:
          type: string
          example: someone@gmail.com
    
    GET_Generations_Response_200:
      type: object
      properties:
        generations:
          type: array
          items:
            type: object
            properties:
              map:
                type: object
                properties:
                  tp_name:
                    type: string
                    example: StandartMap
                  json:
                    type: string
                    example: '[{value : 45}]'
              life_type:
                type: object
                properties:
                  tp_name:
                    type: string
                    example: RepeatLifeType
                  json:
                    type: string
                    example: '[{value : 45}]'
              feed_type:
                type: object
                properties:
                  tp_name:
                    type: string
                    example: StandartFeeding
                  json:
                    type: string
                    example: '[{value : 45}]'
              setup_type:
                type: object
                properties:
                  tp_name:
                    type: string
                    example: RandomStart
                  json:
                    type: string
                    example: '[{value : 45}]'
              tick:
                type: number
              last_send_num:
                type: number
              last_cell_num:
                type: number
              description:
                type: string
    
    GET_GenerationTime_Response_200:
      type: object
      properties:
        time:
          type: number
          example: 0.17
    GET_GenerationLifeEnds_Response_200:
      type: object
      properties:
        time:
          type: number
          example: 0
    
    PATCH_Generation_Body:
      type: object
      properties:
        name:
          type: string
          example: Funny Generation
        description:
          type: string
          example: Blya blya blya
    PUT_Generation_Body:
      type: object
      properties:
        name:
          type: string
          example: Generation1
        map:
          type: object
          properties:
            prefab_name:
              type: string
              example: StandartMap
            unique_json:
              type: string
              example: '[{value : 45}]'
        feed_type:
          type: object
          properties:
            prefab_name:
              type: string
              example: StandartFeeding
            unique_json:
              type: string
              example: '[{value : 45}]'
        setup_type:
          type: object
          properties:
            prefab_name:
              type: string
              example: RandomSetup
            unique_json:
              type: string
              example: '[{value : 45}]'
        life_type:
          type: object
          properties:
            prefab_name:
              type: string
              example: RepeatLifeType
            unique_json:
              type: string
              example: '[{value : 45}]'
        description:
          type: string
          example: Some description
        tick:
          type: number
          example: 0.1
    
    GET_Config_Response_200:
      type: object
      properties:
        map_names:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: Квадрат
              prefab_name:
                type: string
                example: StandartMap
              json:
                type: string
                example: '[{value : 45}]'
        life_types:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: Повтор начала
              prefab_name:
                type: string
                example: Repeat_Setup
              json:
                type: string
                example: '[{value : 45}]'
        feed_types:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: По стандарту
              prefab_name:
                type: string
                example: StandartFeeding
              json:
                type: string
                example: '[{value : 45}]'
        ticks:
          type: array
          items:
            type: number
            example: 0.1, 0.5
        setup_types:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: Случайная генерация
              prefab_name:
                type: string
                example: Random_Generation
              json:
                type: string
                example: '[{value : 45}]'
    
    GET_GenerationCellsInTick_Response_200:
      type: object
      properties:
        cells:
          type: array
          items:
            $ref: '#/components/schemas/cell'
    PATCH_GenerationInfoInTick_Body:
      type: object
      properties:
        added:
          type: array
          items:
            $ref: '#/components/schemas/cell'
        changes:
          type: array
          items:
            $ref: '#/components/schemas/changes'
        deleted:
          type: array
          items:
            type: number
        json_for_map:
          type: string
          example: '[{value : 45}]'
    
    # Отдельные схемы
    cell:
      type: object
      properties:
        parent_id:
          type: number
        own_id:
          type: number
        modules:
          type: array
          items:
            $ref: '#/components/schemas/module'
        intellect:
          $ref: '#/components/schemas/cell_intellect'
    module:
      type: object
      properties:
        name:
          type: string
        value:
          type: number
          format: float
          nullable: true
          example: 0.17
    cell_intellect:
      type: object
      properties:
        neurons_count:
          type: number
        gens_count:
          type: number
        input_neurons_count:
          type: number
        output_neurons_count:
          type: number
        neurons:
          type: array
          items:
            $ref: '#/components/schemas/neuron'
        gens:
          type: array
          items:
            $ref: '#/components/schemas/synaps'
    neuron:
      type: object
      properties:
        bias:
          type: number
          format: float
          example: 0.17
    synaps:
      type: object
      properties:
        el_neur_number:
          type: number
          example: 1
        fin_neur_number:
          type: number
          example: 3
        weight:
          type: number
          format: float
          example: 0.17
    
    changes:
      type: object
      properties:
        cell_id:
          type: number
          example: 0
        name:
          type: string
          example: PositionX
        value:
          type: number
          format: float
          nullable: true
          example: 0.17